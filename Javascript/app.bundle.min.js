import { homeTemplate, projetosTemplate, cadastroTemplate } from './templates.js';import { setupForm } from './form.js';const routes = {'/': homeTemplate, '/projetos': projetosTemplate, '/cadastro': cadastroTemplate};const app = document.getElementById('app') || document.body;function render(){const path = (location.hash.replace('#','') || '/');const fn = routes[path] || routes['/'];app.innerHTML = fn();setupForm();updateNav();document.getElementById('app')?.focus();}function updateNav(){const links = document.querySelectorAll('nav a[data-link]');links.forEach(a => {const href = a.getAttribute('href') || '';a.classList.toggle('ativo', href === location.hash || (href === '#/' && (location.hash === '' || location.hash === '#/')));});}window.addEventListener('hashchange', render);window.addEventListener('load', render);export default { render };
import { getCadastros } from './storage.js';export function homeTemplate(){return `<section class="card"><h2>Quem Somos</h2><p>A <strong>Amor Animal</strong> promove resgates e adoções responsáveis.</p></section><section class="card"><h2>Nosso Impacto</h2><p>Total de cadastros: <strong>${getCadastros().length}</strong></p></section>`;}export function projetosTemplate(){const cad = getCadastros();const lista = cad.length ? '<ul>' + cad.map(c => `<li><strong>${escape(c.nome)}</strong> — ${escape(c.tipo)} — ${escape(c.cidade)}</li>`).join('') + '</ul>' : '<p>Nenhum cadastro ainda.</p>';return `<section class="card"><h2>Projetos</h2><p>Campanhas e iniciativas.</p></section><section class="card"><h2>Cadastros</h2>${lista}</section>`;}export function cadastroTemplate(){return `<section class="card"><h2>Cadastro</h2><form id="form-cadastro" novalidate><label for="nome">Nome Completo</label><input id="nome" name="nome" required><label for="email">E-mail</label><input id="email" name="email" type="email" required><label for="cpf">CPF</label><input id="cpf" name="cpf" required placeholder="000.000.000-00"><label for="telefone">Telefone</label><input id="telefone" name="telefone" required placeholder="(00) 00000-0000"><button type="submit" class="btn">Enviar</button></form></section>`;}function escape(s){ return String(s||'').replace(/[&<>"']/g, m => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":"&#39;"})[m]); }
export const STORAGE_KEY = 'amor-animal:cadastros';export function saveCadastro(c){ const list = getCadastros(); list.push(c); localStorage.setItem(STORAGE_KEY, JSON.stringify(list)); }export function getCadastros(){ try{ const raw = localStorage.getItem(STORAGE_KEY); return raw? JSON.parse(raw):[] }catch(e){console.error(e); return []} }export function clearCadastros(){ localStorage.removeItem(STORAGE_KEY); }
import { saveCadastro } from './storage.js';export function setupForm(){ const form = document.getElementById('form-cadastro'); if(!form) return;applyMasks(form);form.addEventListener('submit', function(ev){ ev.preventDefault();const erro = document.getElementById('mensagem-erro') || document.createElement('div');erro.id = 'mensagem-erro'; erro.setAttribute('role','alert'); erro.style.color='var(--cor-erro)';const data = Object.fromEntries(new FormData(form).entries());const tipo = form.querySelector('input[name="tipo"]:checked'); data.tipo = tipo ? tipo.value : 'Voluntário';const problems = [];if(!/\S+@\S+\.\S+/.test(data.email || '')) problems.push('E-mail inválido');// simples para demoif(problems.length){ erro.innerHTML = problems.map(p => `<div>• ${p}</div>`).join(''); form.prepend(erro); return; }saveCadastro({ nome: data.nome, email: data.email, cpf: data.cpf, telefone: data.telefone, cidade: data.cidade||'', tipo: data.tipo, criadoEm: new Date().toISOString() });form.reset(); erro.style.color='var(--cor-sucesso)'; erro.textContent='Cadastro enviado com sucesso!'; form.prepend(erro);setTimeout(()=> location.hash = '#/projetos', 900);});}function applyMasks(root){ const cpf = root.querySelector('#cpf'); const tel = root.querySelector('#telefone'); if(cpf) cpf.addEventListener('input', e=>{ let v=e.target.value.replace(/\D/g,'').slice(0,11); v=v.replace(/(\d{3})(\d)/,'$1.$2'); v=v.replace(/(\d{3})(\d)/,'$1.$2'); v=v.replace(/(\d{3})(\d{1,2})$/,'$1-$2'); e.target.value=v; }); if(tel) tel.addEventListener('input', e=>{ let v=e.target.value.replace(/\D/g,'').slice(0,11); v=v.replace(/^(\d{2})(\d)/,'($1) $2'); v=v.replace(/(\d)(\d{4})$/,'$1-$2'); e.target.value=v; }); }